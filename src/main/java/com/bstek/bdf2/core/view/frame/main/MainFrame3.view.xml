<?xml version="1.0" encoding="UTF-8"?>
<ViewConfig template="bdf2.core.view.frame.main.MainFrameTemplate">
  <Arguments/>
  <Context/>
  <Model/>
  <View>
    <ClientEvent name="onReady">var path=&quot;${configure.getString('bdf2.mainFrame.welcomePath')}&quot;;&#xD;
var icon=&quot;${configure.getString('bdf2.mainFrame.welcomeIcon')}&quot;;&#xD;
var title=&quot;${configure.getString('bdf2.mainFrame.welcomeTitle')}&quot;;&#xD;
if(path){&#xD;
	window.openUrlInFrameTab(path,title,icon,true);&#xD;
}</ClientEvent>
    <Property name="packages">tree</Property>
    <GroupStart id="workspace"/>
    <DataSet id="dataSetUrl">
      <ClientEvent name="onReady">String.prototype.replaceAll = function(reallyDo, replaceWith, ignoreCase) {&#xD;
	if (!RegExp.prototype.isPrototypeOf(reallyDo)) {&#xD;
	    return this.replace(new RegExp(reallyDo, (ignoreCase ? &quot;gi&quot;: &quot;g&quot;)), replaceWith);&#xD;
	} else {&#xD;
	    return this.replace(reallyDo, replaceWith);&#xD;
	}&#xD;
}&#xD;
var expanded=&quot;${configure.getBoolean(&quot;bdf2.mainFrameMenuExpanded&quot;)}&quot;;&#xD;
var accordionNav=view.id(&quot;accordionNav&quot;);&#xD;
var listArray = [];&#xD;
var treeJson={};&#xD;
var data=self.getData();&#xD;
if(!data){&#xD;
	return;&#xD;
}&#xD;
data.each(function(url){&#xD;
	var section=new dorado.widget.Section();&#xD;
	section.set(&quot;caption&quot;,url.get(&quot;name&quot;));&#xD;
	if(url.get(&quot;desc&quot;)){&#xD;
		section.set(&quot;tip&quot;,url.get(&quot;desc&quot;));	&#xD;
	}&#xD;
	if(url.get(&quot;icon&quot;)){&#xD;
		section.set(&quot;icon&quot;,url.get(&quot;icon&quot;));	&#xD;
	}&#xD;
	section.set(&quot;name&quot;,url.get(&quot;id&quot;));&#xD;
	section.set(&quot;control&quot;,new dorado.widget.Tree());&#xD;
	section.set(&quot;userData&quot;,url);&#xD;
	accordionNav.addSection(section);&#xD;
});&#xD;
&#xD;
accordionNav.set(&quot;onCurrentSectionChange&quot;,function(accrodion,arg){&#xD;
	var section=arg.newSection;&#xD;
	var id=section.get(&quot;name&quot;);&#xD;
	if(treeJson[id]){&#xD;
		return;&#xD;
	}&#xD;
	treeJson[id]=&quot;tree&quot;;&#xD;
	var url=section.get(&quot;userData&quot;);&#xD;
	var cdata=url.get(&quot;children&quot;);&#xD;
	if(!cdata){&#xD;
		return;&#xD;
	}&#xD;
	var tree=section.get(&quot;control&quot;);&#xD;
	tree.set(&quot;onDataRowClick&quot;,function(self,arg){&#xD;
		var node=self.get(&quot;currentNode&quot;);&#xD;
		var data=node.get(&quot;userData&quot;);&#xD;
		if(data.get(&quot;url&quot;)){&#xD;
			window.openUrlInFrameTab(data.get(&quot;url&quot;),data.get(&quot;name&quot;),data.get(&quot;icon&quot;));&#xD;
		}&#xD;
	});&#xD;
	tree.set(&quot;onDataRowDoubleClick&quot;,function(self,arg){&#xD;
		var node=self.get(&quot;currentNode&quot;);&#xD;
		var data=node.get(&quot;userData&quot;);&#xD;
		if(data.get(&quot;url&quot;)){&#xD;
			window.openUrlInFrameTab(data.get(&quot;url&quot;),data.get(&quot;name&quot;),data.get(&quot;icon&quot;),true);&#xD;
		}&#xD;
	});		&#xD;
	var rootNode=tree.get(&quot;root&quot;);&#xD;
	cdata.each(function(d){&#xD;
		buildTree(rootNode,d);&#xD;
	});&#xD;
});&#xD;
&#xD;
function buildTree(topNode,url){&#xD;
	var node=new dorado.widget.tree.Node();&#xD;
	if(expanded==&quot;true&quot;){&#xD;
		node.set(&quot;expanded&quot;,true);&#xD;
	}&#xD;
	node.set(&quot;label&quot;,url.get(&quot;name&quot;));&#xD;
	if(url.get(&quot;desc&quot;)){&#xD;
		node.set(&quot;tip&quot;,url.get(&quot;desc&quot;));&#xD;
	}&#xD;
	if(url.get(&quot;icon&quot;)){&#xD;
		node.set(&quot;icon&quot;,url.get(&quot;icon&quot;));&#xD;
	}&#xD;
	node.set(&quot;userData&quot;,url);&#xD;
	topNode.addNode(node);&#xD;
	var cdata=url.get(&quot;children&quot;);&#xD;
	if(!cdata){&#xD;
		return;&#xD;
	}&#xD;
	cdata.each(function(d){&#xD;
		buildTree(node,d);&#xD;
	});&#xD;
}&#xD;
</ClientEvent>
      <Property name="dataProvider">bdf2.mainFrame#loadMeunUrls</Property>
      <Property name="dataType">[dataTypeUrl]</Property>
      <Property name="loadMode">onReady</Property>
    </DataSet>
    <SplitPanel layoutConstraint="center">
      <Property name="position">200</Property>
      <MainControl>
        <Panel id="panelWorkarea">
          <Property name="border">none</Property>
          <Property name="maximizeable">true</Property>
          <Buttons/>
          <Children>
            <TabControl id="tabControlWorkarea">
              <ClientEvent name="onTabContextMenu">view.id(&quot;menuForTab&quot;).show({&#xD;
	position:{&#xD;
		left:arg.event.pageX,&#xD;
		top:arg.event.pageY&#xD;
	}&#xD;
});&#xD;
</ClientEvent>
              <Property name="showMenuButton">true</Property>
            </TabControl>
          </Children>
          <Tools/>
        </Panel>
      </MainControl>
      <SideControl>
        <Container>
          <Accordion id="accordionNav"/>
        </Container>
      </SideControl>
    </SplitPanel>
    <GroupEnd/>
  </View>
</ViewConfig>
